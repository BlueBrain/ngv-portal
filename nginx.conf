worker_processes 1;

pid /tmp/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  upstream ngv_portal_upstream {
    server ngv-portal:8000;
  }

  sendfile on;

  client_body_temp_path /tmp/client_body_temp;
  proxy_temp_path /tmp/proxy_temp;
  fastcgi_temp_path /tmp/fastcgi_temp;
  uwsgi_temp_path /tmp/uwsgi_temp;
  scgi_temp_path /tmp/scgi_temp;
  proxy_cache_path /tmp/nginx_temp levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

  map $uri $expire {
    /ngv-portal/_next/image 1d;
    default off;
  }

  server {
    listen 8000 default_server;

    gzip on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/html text/css application/javascript image/svg+xml;

    server_name _;

    server_tokens off;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    location /ngv-portal/_next/static {
      proxy_cache STATIC;

      # For testing cache
      # TODO: remove before deploying to production
      add_header X-Cache-Status $upstream_cache_status;

      proxy_pass http://ngv_portal_upstream;
    }

    location /ngv-portal/assets {
      proxy_cache STATIC;

      proxy_ignore_headers Cache-Control;
      proxy_cache_valid 7d;
      proxy_pass http://ngv_portal_upstream;

      # For testing cache
      # TODO: remove before deploying to production
      add_header X-Cache-Status $upstream_cache_status;
    }

    location /ngv-portal/_next/image {
      proxy_cache STATIC;

      proxy_ignore_headers Cache-Control;
      proxy_cache_valid 7d;

      # add_header Cache-Control "public, max-age=86400";
      # expires 1h;

      proxy_pass http://ngv_portal_upstream;

      # For testing cache
      # TODO: remove before deploying to production
      add_header X-Cache-Status $upstream_cache_status;
    }

    location / {
      proxy_pass http://ngv_portal_upstream;
    }
  }
}
